{"version":3,"sources":["imges/image2.jpeg","imges/image3.jpg","imges/image4.jpg","imges/image5.jpg","imges/burger4.jpg","imges/sliderchicken.jpg","components/Food.js","components/FoodList.js","components/CartFood.js","Home.js","Mnue.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Food","props","src","food","img","width","height","alt","className","name","price","Button","onClick","handleBtnClick","variant","FoodList","allFood","this","foodDB","map","index","Carousel","Item","key","Component","CartFood","allitem","foods","length","Home","city","temp","Mnue","Container","Row","Col","xs","clearHanle","carts","Contact","App","state","console","log","foodIndex","indexOf","splice","setState","image2","image3","image4","burger4","sliderchicken","image5","axios","method","url","then","response","data","main","catch","error","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,0OCmB5BC,EAhBF,SAACC,GACV,OACI,oCACI,yBAAKC,IAAKD,EAAME,KAAKC,IAAKC,MAAO,QAAQC,OAAO,QAAQC,IAAI,sBAC5D,yBAAKC,UAAU,WAEf,4BAAKP,EAAME,KAAKM,MAChB,2BAAIR,EAAME,KAAKO,QAEf,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAKX,EAAMY,eAAeZ,EAAME,OAAOW,QAAQ,mBAAhE,0B,QCRSC,E,iLACP,IAAD,OACCC,EAAUC,KAAKhB,MAAMiB,OAAOC,KAAI,SAAChB,EAAMiB,GACzC,OAAO,kBAACC,EAAA,EAASC,KAAV,CAAeC,IAAKH,GAAS,kBAAC,EAAD,CAAMP,eAAgB,EAAKZ,MAAMY,eAAgBV,KAAMA,QAE/F,OACI,kBAACkB,EAAA,EAAD,KACKL,O,GAPqBQ,a,sGCuBvBC,EAzBE,SAACxB,GAClB,IAAIyB,EAiBI,OAfJA,EADqB,GAAtBzB,EAAM0B,MAAMC,OACD,4CAED3B,EAAM0B,MAAMR,KAAI,SAAChB,EAAKiB,GAC3B,OAAO,yBAAKG,IAAKH,GACjB,yBAAKlB,IAAKC,EAAKC,IAAKC,MAAO,QAAQC,OAAO,QAAQC,IAAI,sBACtD,yBAAKC,UAAU,WAEf,4BAAKL,EAAKM,MACV,2BAAIN,EAAKO,YAQL,yBAAKF,UAAU,QACVkB,ICAFG,MApBf,SAAc5B,GACZ,OACI,yBAAKO,UAAU,iBAEX,yBAAKA,UAAU,YAEX,4BAAKP,EAAM6B,MACf,4BAAK7B,EAAM8B,KAAX,UAGF,yBAAKvB,UAAU,SACf,6CACA,6D,uCCRO,SAASwB,EAAK/B,GAC3B,OACE,kBAACgC,EAAA,EAAD,CAAWzB,UAAU,QACxB,kBAAC0B,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAKC,GAAM,GAAI,kBAAC,EAAD,CAAUlB,OAAQjB,EAAMiB,OAAQL,eAAgBZ,EAAMY,mBAQxE,kBAACF,EAAA,EAAD,CAAQC,QAASX,EAAMoC,WAAYvB,QAAQ,mBAA3C,SAEEb,EAAMqC,MAAMV,OAAO,GAAI,kBAAC,EAAD,CAAUD,MAAO1B,EAAMqC,SCnBjC,SAASC,IACpB,OACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAU,WACf,uCACA,oDACA,mD,qBCqIOgC,E,YAzHd,WAAYvC,GAAQ,IAAD,8BACjB,4CAAMA,KAsCRY,eAAiB,SAACV,GAEd,IAAImC,EAAK,YAAO,EAAKG,MAAMH,OAC3BI,QAAQC,IAAIxC,GACZ,IAAMyC,EAAYN,EAAMO,QAAQ1C,IAEb,IAAfyC,GACFN,EAAMQ,OAAOF,EAAW,GACxBF,QAAQC,IAAI,sCAEZL,EAAK,sBAAO,EAAKG,MAAMH,OAAlB,CAAyBnC,IAC9B,EAAK4C,SAAS,CACZT,MAAOA,IAETI,QAAQC,IAAI,EAAKF,MAAMH,OACvBI,QAAQC,IAAR,iBAAsBxC,EAAKM,KAA3B,eAGF,EAAKsC,SAAS,CAACT,UACjBI,QAAQC,IAAI,EAAKF,MAAMH,QA1DN,EA8DnBD,WAAY,WACVK,QAAQC,IAAI,EAAKF,MAAMH,OACvB,EAAKS,SAAS,CACZT,MAAO,KAETI,QAAQC,IAAI,EAAKF,MAAMH,QAjEvB,EAAKG,MAAQ,CACXvB,OAAQ,CAAC,CACPd,IAAI4C,IACJvC,KAAM,iBACNC,MAAO,SACN,CACDN,IAAI6C,IACJxC,KAAM,gBACNC,MAAO,SAET,CACEN,IAAI8C,IACJzC,KAAM,gBACNC,MAAO,SAET,CACEN,IAAI+C,IACJ1C,KAAM,cACNC,MAAO,SAET,CACCN,IAAIgD,IACJ3C,KAAM,iBACNC,MAAO,SAET,CACEN,IAAIiD,IACJ5C,KAAM,cACNC,MAAO,UAGR4B,MAAQ,GACRP,KAAO,GACPD,KAAO,IAnCQ,E,iFAuEC,IAAD,OAIlBwB,IAAM,CACJC,OAAO,MACPC,IAAI,mGAELC,MAAK,SAAAC,GACJ,IAAM3B,EAAK2B,EAASC,KAAKC,KAAK7B,KAAM,OAC9BD,EAAM4B,EAASC,KAAKlD,KAI1B,EAAKsC,SAAS,CAAChB,OAAMD,SACrBY,QAAQC,IAAIe,MAEbG,OAAM,SAAAC,GACLpB,QAAQC,IAAImB,Q,+BAKL,IAAD,OACP,OAGH,kBAAC,IAAD,KACM,yBAAKtD,UAAU,UACb,kBAAC,IAAD,CAAMuD,GAAG,KAAT,QAAyB,QACzB,kBAAC,IAAD,CAAMA,GAAG,SAAT,QAA6B,QAC7B,kBAAC,IAAD,CAAMA,GAAG,YAAT,WAAmC,QACnC,kBAAC,IAAD,CAAMA,GAAG,aAAT,WAAoC,SAGtC,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAM,kBAAC,EAAD,CAAMnC,KAAM,EAAKU,MAAMV,KAAMD,KAAQ,EAAKW,MAAMX,UACvF,kBAAC,IAAD,CAAOmC,KAAK,QAAQC,UAAW,wBAAK,kBAAClC,GAAD,GAAMM,MAAO,EAAKG,MAAMH,MAAOD,WAAY,EAAKA,WAAYnB,OAAQ,EAAKuB,MAAMvB,QAA/E,2BAAmG,EAAKmB,YAAxG,+BAAoI,EAAKxB,gBAAzI,OACpC,kBAAC,IAAD,CAAOoD,KAAK,WAAWC,UAAW3B,IAClC,kBAAC,IAAD,CAAO0B,KAAK,YAAYC,UAAW,kBAAK,kBAAC,EAAD,CAAUvC,MAAO,EAAKc,MAAMH,iB,GA/G1Dd,aCPE2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,MAAK,SAAAsB,GACjCA,EAAaC,kB","file":"static/js/main.23891c91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image2.b8b15254.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/image3.c5092309.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image4.dcaa550e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image5.8b203bec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/burger4.014a0cb3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sliderchicken.b2c1268c.jpg\";","import React from 'react'\nimport { Button, Container } from 'react-bootstrap';\n\nconst Food = (props) => {\n    return (\n        <>\n            <img src={props.food.img} width= \"800px\" height=\"700px\" alt=\"image of the item\"></img>\n            <div className=\"details\">\n\n            <h3>{props.food.name}</h3>\n            <p>{props.food.price}</p>\n            </div>\n            <Button onClick={()=> props.handleBtnClick(props.food)} variant=\"outline-warning\">Add item to the cart</Button>\n            \n            \n        </>\n    )\n}\n\nexport default Food\n","import React, { Component } from 'react'\nimport Food from './Food'\nimport { Carousel } from 'react-bootstrap';\n\nexport default class FoodList extends Component {\n    render() {\n        const allFood = this.props.foodDB.map((food, index) => {\n            return <Carousel.Item key={index}  ><Food handleBtnClick={this.props.handleBtnClick} food={food}  /></Carousel.Item>\n        })\n        return (\n            <Carousel>\n                {allFood}\n            </Carousel>)\n    }\n}\n","import React from 'react'\n\nconst CartFood = (props) =>{\nlet allitem;\nif(props.foods.length == 0){\n    allitem = <h1>Empty Cart..</h1>\n}else{\n  allitem =  props.foods.map((food,index)=>{\n        return <div key={index}>\n        <img src={food.img} width= \"800px\" height=\"700px\" alt=\"image of the item\"></img>\n        <div className=\"details\">\n\n        <h3>{food.name}</h3>\n        <p>{food.price}</p>\n        </div>\n        </div>\n    })\n\n}\n    \n        return (\n            <div className=\"cart\">\n                {allitem}\n            </div>\n        )\n}\n\nexport default CartFood","import React, { Component } from 'react';\n\nfunction Home(props) {\n  return (\n      <div className=\"containerhome\">\n\n          <div className=\"citytemp\">\n\n              <h3>{props.city}</h3>\n          <h3>{props.temp}&deg;C</h3>\n\n          </div>\n        <div className=\"title\">\n        <h1>Yummy Yum App</h1>\n        <p>\n          Welcome to my Dilicious App\n        </p>\n        </div>\n\n      </div>\n  );\n}\nexport default Home;","import React , { Component } from 'react'\nimport {Container, Row, Col} from 'react-bootstrap';\nimport FoodList from './components/FoodList';\nimport CartFood from './components/CartFood';\nimport { Button } from 'react-bootstrap';\n\nexport default function Mnue(props) {\n  return (\n    <Container className=\"mnue\">\n <Row>\n   \n   <Col xs = {8} ><FoodList foodDB={props.foodDB} handleBtnClick={props.handleBtnClick}/>\n</Col>\n  \n </Row>\n\n\n\n\n<Button onClick={props.clearHanle} variant=\"outline-warning\">Clear</Button>\n\n {props.carts.length>0 ? <CartFood foods={props.carts}/> : false}\n</Container>\n  )\n}\n\n\n\n\n\n","import React, { Component } from 'react';\n\nexport default function Contact() {\n    return (\n      <div className=\"contact-container\">\n        <div className=\"contact\">\n        <h1>Contact</h1>\n        <p>frontdesk@foodapp.com</p>\n        <p> 1 (800) 698-3384 </p>\n      </div>\n      </div>\n    )\n  }\n\n  ","import React, { Component } from 'react'\n// import logo from './favicon.ico';\nimport './App.css';\nimport FoodList from './components/FoodList'\n// import { url } from 'inspector';\nimport image2 from './imges/image2.jpeg';\nimport image3 from './imges/image3.jpg';\nimport image4 from './imges/image4.jpg';\nimport image5 from './imges/image5.jpg';\nimport burger4 from './imges/burger4.jpg';\nimport sliderchicken from './imges/sliderchicken.jpg';\nimport CartFood from './components/CartFood';\nimport Home from './Home';\nimport {BrowserRouter as Router, Route,Link} from 'react-router-dom';\nimport Mnue from './Mnue';\nimport Contact from './Contact';\nimport axios from 'axios'\n\n\nclass App extends Component {\n constructor(props) {\n   super(props)\n   this.state = {\n     foodDB: [{\n       img:image2,\n       name: 'Chicken Crispy',\n       price: \"45 SR\",\n     }, {\n       img:image3 ,\n       name: 'Solar Gravity',\n       price: \"45 SR\",\n     },\n     {\n       img:image4,\n       name: 'Chickn Burger',\n       price: \"45 SR\",\n     },\n     {\n       img:burger4 ,\n       name: 'Beef Burger',\n       price: \"45 SR\",\n     },\n     {\n      img:sliderchicken,\n      name: 'Dynamit-Shrimp',\n      price: \"60 SR\",\n    },\n    {\n      img:image5 ,\n      name: 'Crazy Fryse',\n      price: \"45 SR\",\n    },],\n\n     carts : [],\n     temp : '',\n     city : ''\n   }\n }\n \n handleBtnClick = (food) => {\n\n     let carts = [...this.state.carts];\n     console.log(food)\n     const foodIndex = carts.indexOf(food)\n\n     if (foodIndex !== -1){\n       carts.splice(foodIndex, 1);\n       console.log('Removing ${food.name} From Carts')\n     }else{\n       carts = [...this.state.carts, food]\n       this.setState({\n         carts: carts\n       })\n       console.log(this.state.carts)\n       console.log(`Adding ${food.name} To Carts`)\n     }\n\n     this.setState({carts})\n   console.log(this.state.carts);\n\n }\n\n clearHanle =()=>{\n   console.log(this.state.carts)\n   this.setState({\n     carts: []\n   })\n   console.log(this.state.carts)\n\n }\n\n componentDidMount(){\n  // const weather = document.querySelector('#degree');\n  // const cityName = document.querySelector('#city');\n  \n  axios({\n    method:'get',\n    url:'http://api.openweathermap.org/data/2.5/weather?q=Riyadh&APPID=17fb5fb0eaaf777fa63a9d3ce7daa9c6'\n  })\n  .then(response =>{\n    const temp=response.data.main.temp -273.15;\n    const city =response.data.name;\n    // cityName.innerText=city;\n    // weather.innerHTML=`${temp}&deg;C`;\n\n    this.setState({temp, city})\n    console.log(response);\n  })\n  .catch(error =>{\n    console.log(error);\n  })\n }\n\n\n render() {\n   return (\n\n\n<Router>\n      <nav className=\"navbar\">\n        <Link to=\"/\">Home</Link>{'  |  '}\n        <Link to=\"/mnue\">Mnue</Link>{'  |  '}\n        <Link to=\"/contact\">Contact</Link>{'  |  '}\n        <Link to=\"/cartfood\">My Cart</Link>{'  |  '}\n      </nav>\n\n      <div>\n        <Route exact path=\"/\" component={() => <Home temp={this.state.temp} city = {this.state.city}/>} />\n        <Route path=\"/mnue\" component={()=> <Mnue carts={this.state.carts} clearHanle={this.clearHanle} foodDB={this.state.foodDB} clearHanle={this.clearHanle} handleBtnClick={this.handleBtnClick} />} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/cartfood\" component={()=> <CartFood foods={this.state.carts} />} />\n      </div>\n    </Router>\n   )\n }\n}\n\n\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}